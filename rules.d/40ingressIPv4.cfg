################################################################################################
############################ INGRESS RULES #####################################################
################################################################################################
# We should not answer or send traffic to/from rfc1918 nets. Change this if you need to!
$iptables -A INPUT -d 127.0.0.0/8  -j ACCEPT
$iptables -A INPUT -s 127.0.0.0/8  -j ACCEPT
$iptables -A INPUT -s 10.0.0.0/255.0.0.0 -j DROP
$iptables -A INPUT -d 10.0.0.0/255.0.0.0 -j DROP
$iptables -A INPUT -s 172.16.0.0/255.240.0.0 -j DROP
$iptables -A INPUT -d 172.16.0.0/255.240.0.0 -j DROP

$iptables -A INPUT -s 192.168.2.0/24 -j ACCEPT
$iptables -A INPUT -d 192.168.2.0/24 -j ACCEPT
$iptables -A INPUT -s 192.168.0.0/255.255.0.0 -j DROP
$iptables -A INPUT -d 192.168.0.0/255.255.0.0 -j DROP

# VERY RECOMMENDED! 
# For security issues you should insert a rule which blocks incoming TCP connection requests
# Block incoming TCP connection requests to this host 
#$iptables -I INPUT -p tcp --syn -j DROP
# Block incoming TCP connection requests to hosts behind this router 
# (I dont care if there are non... block block block )
#$iptables -I FORWARD -p tcp --syn -j DROP


## Next rule is to let packetes through which belong to establisted or related connections
$iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT

# I have to say that fragments scare me more than anything.
# Fragments can be overlapped, and the subsequent interpretation of such
# fragments is very OS-dependent.
# I am not going to trust any fragments..
$iptables -A INPUT -f -j DROP

################################################################################################
##### HTTP / HTTPS #############################################################################
$iptables -A INPUT -p tcp --dport 80 -m state --state NEW -j ACCEPT
$iptables -A INPUT -p tcp --dport 443 -m state --state NEW -j ACCEPT

################################################################################################
##### HTTP PROXY ###############################################################################
$iptables -A INPUT -p tcp --dport 8088 -m state --state NEW -j ACCEPT
$iptables -A INPUT -p tcp --dport 8118 -m state --state NEW -j ACCEPT

################################################################################################
##### MySQL ####################################################################################
#$iptables -A INPUT -p tcp --dport 3306 -m state --state NEW -j ACCEPT

################################################################################################
##### Ident ####################################################################################
# if we drop thes pakets we may need to wait for the timeouts
#  e.g. on ftp servers
#$iptables -A INPUT -p tcp --dport 113 -m state --state NEW -j REJECT

################################################################################################
##### FTP ######################################################################################
#$iptables -A INPUT -p tcp --dport 21 -m state --state NEW -j ACCEPT

################################################################################################
##### IRC ######################################################################################
#$iptables -A INPUT -p tcp --dport 6667 -m state --state NEW -j ACCEPT

################################################################################################
##### SSH ######################################################################################
# If you want to block someone, the rule has to be befor allowing everything.
#
#$iptables -A INPUT -p tcp -s 192.168.0.10 -m tcp -j DROP

$iptables -A INPUT -p tcp --dport  22 -m state --state NEW -j ACCEPT
#$iptables -A INPUT -p tcp --dport 122 -m state --state NEW -j ACCEPT

#$iptables -A INPUT -p tcp --dport 22 -m state --state NEW -j ACCEPT
#$iptables -A INPUT -p tcp --dport 22 -s 192.168.2.0/24 -j ACCEPT

################################################################################################
##### Mail #####################################################################################
# SMTP
$iptables -A INPUT -p tcp --dport 25 -m state --state NEW -j ACCEPT

#POP 3  110 ?
#$iptables -A INPUT -p tcp --dport 110 -m state --state NEW -j ACCEPT

#IMAP 143 ?
#$iptables -A INPUT -p tcp --dport 143 -s 192.168.0.1/29 -m state --state NEW -j ACCEPT
#$iptables -A INPUT -p tcp --dport 143 -m state --state NEW -j ACCEPT
#$iptables -A INPUT -p tcp --dport 143 -m state --state NEW -j LOG --log-prefix "CHESS MOB: "

#IMAP-SSL
#$iptables -A INPUT -p tcp --dport 993 -m state --state NEW -j ACCEPT
#$iptables -A INPUT -p tcp --dport 995 -m state --state NEW -j ACCEPT

################################################################################################
###### DNS #####################################################################################
# Allow UDP&TCP packets to the DNS server from clients.
# (only need if this is an DNS server)
#$iptables -A INPUT -p tcp --dport 53 -s 192.168.0.1 -m state --state NEW -j ACCEPT
#$iptables -A INPUT -p udp --dport 53 -s 192.168.0.1 -m state --state NEW -j ACCEPT

################################################################################################
##### LOOPBACK #################################################################################
# Allow unlimited traffic on the loopback interface.
# e.g. needed for KDE, Gnome
$iptables -A INPUT -i lo -j ACCEPT
$iptables -A OUTPUT -o lo -j ACCEPT

################################################################################################
##### ICMP #####################################################################################
# all can ping me - remove that line if no one should be able to ping you
$iptables -A INPUT -p icmp --icmp-type ping -s 192.168.0.0/24 -j ACCEPT
$iptables -A INPUT -p icmp --icmp-type ping -j ACCEPT


# rpc.statd
#$iptables -A INPUT -p tcp --dport 4000 -s 192.168.2.0/24 -m state --state NEW -j ACCEPT
# portmap
#$iptables -A INPUT -p tcp --dport 111 -s 192.168.2.0/24 -m state --state NEW -j ACCEPT
# munin 
#$iptables -A INPUT -p tcp --dport 4949 -s 192.168.2.0/24 -m state --state NEW -j ACCEPT
